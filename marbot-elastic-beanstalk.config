# Setup instructions
# 1. In your Elastic Beanstalk project's source code, create a folder .ebextensions (learn more https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/ebextensions.html).
# 2. Copy this file into the .ebextensions folder (file must end with .config!).
# 3. Adjust the MarbotEndpointId option_settings.
# 4. Deploy the application.

option_settings:
  aws:elasticbeanstalk:customoption:
    # Your marbot endpoint ID (to get this value: select a channel where marbot belongs to and send a message like this: "@marbot show me my endpoint id").
    MarbotEndpointId: ''

    # The maximum percentage of CPU utilization.
    MarbotCPUUtilizationThreshold: 80

    # The minimum number of CPU credits available (t* instances only).
    MarbotCPUCreditBalanceThreshold: 20

Resources:
  MarbotTopic:
    Type: 'AWS::SNS::Topic'
    Properties: {}
  MarbotTopicPolicy:
    Type: 'AWS::SNS::TopicPolicy'
    Properties:
      PolicyDocument:
        Id: Id1
        Version: '2012-10-17'
        Statement:
        - Sid: Sid1
          Effect: Allow
          Principal:
            AWS: '*'
          Action: 'sns:Publish'
          Resource: {Ref: MarbotTopic}
          Condition:
            StringEquals:
              'AWS:SourceOwner': {Ref: 'AWS::AccountId'}
      Topics:
      - {Ref: MarbotTopic}
  MarbotTopicEndpointSubscription:
    DependsOn: MarbotTopicPolicy
    Type: 'AWS::SNS::Subscription'
    Properties:
      DeliveryPolicy:
        healthyRetryPolicy:
          minDelayTarget: 1
          maxDelayTarget: 60
          numRetries: 100
          numNoDelayRetries: 0
          backoffFunction: exponential
      Endpoint: {'Fn::Join': ['', ['https://api.marbot.io/v1/endpoint/', {'Fn::GetOptionSetting': {OptionName: MarbotEndpointId}}]]}
      Protocol: https
      TopicArn: {Ref: MarbotTopic}
  MarbotCPUUtilizationTooHighAlarm:
    DependsOn: MarbotTopicEndpointSubscription
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmActions:
      - {Ref: MarbotTopic}
      AlarmDescription: 'Average CPU utilization over last 10 minutes too high. (created by marbot)'
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
      - Name: AutoScalingGroupName
        Value: {Ref: AWSEBAutoScalingGroup}
      EvaluationPeriods: 1
      MetricName: CPUUtilization
      Namespace: 'AWS/EC2'
      OKActions:
      - {Ref: MarbotTopic}
      Period: 600
      Statistic: Average
      Threshold: {'Fn::GetOptionSetting': {OptionName: MarbotCPUUtilizationThreshold}}
  MarbotCPUCreditBalanceTooLowAlarm:
    DependsOn: MarbotTopicEndpointSubscription
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmActions:
      - {Ref: MarbotTopic}
      AlarmDescription: 'Average CPU credit balance over last 10 minutes too low, expect a significant performance drop soon. (created by marbot)'
      ComparisonOperator: LessThanThreshold
      Dimensions:
      - Name: AutoScalingGroupName
        Value: {Ref: AWSEBAutoScalingGroup}
      EvaluationPeriods: 1
      MetricName: CPUCreditBalance
      Namespace: 'AWS/EC2'
      OKActions:
      - {Ref: MarbotTopic}
      Period: 600
      Statistic: Average
      Threshold: {'Fn::GetOptionSetting': {OptionName: MarbotCPUCreditBalanceThreshold}}
