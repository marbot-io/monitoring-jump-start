---
# Copyright 2018-2020 widdix GmbH
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
AWSTemplateFormatVersion: '2010-09-09'
Description: 'marbot.io: Auto Scaling Group monitoring (https://github.com/marbot-io/monitoring-jump-start)'
Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
    - Label:
        default: 'marbot endpoint'
      Parameters:
      - EndpointId
      - Stage
    - Label:
        default: 'EC2'
      Parameters:
      - AutoScalingGroupName
    - Label:
        default: 'Thresholds'
      Parameters:
      - CPUUtilizationThreshold
      - CPUCreditBalanceThreshold
      - EBSIOCreditBalanceThreshold
      - EBSThroughputCreditBalanceThreshold
Parameters:
  EndpointId:
    Description: 'Your marbot endpoint ID (to get this value: select a Slack channel where marbot belongs to and send a message like this: "@marbot show me my endpoint id").'
    Type: String
  Stage:
    Description: 'marbot stage (never change this!).'
    Type: String
    Default: v1
    AllowedValues: [v1, dev]
  AutoScalingGroupName:
    Description: 'The name of the Auto Scaling Group that you want to monitor.'
    Type: 'String'
  CPUUtilizationThreshold:
    Description: 'The maximum percentage of CPU utilization (set to -1 to disable).'
    Type: Number
    Default: 80
    MinValue: -1
    MaxValue: 100
  CPUCreditBalanceThreshold:
    Description: 'The minimum number of CPU credits available (t* instances only; set to -1 to disable).'
    Type: Number
    Default: 20
    MinValue: -1
  EBSIOCreditBalanceThreshold:
    Description: 'The minimum percentage of I/O credits remaining in the burst bucket (smaller instance only; set to -1 to disable).'
    Type: Number
    Default: 20
    MinValue: -1
    MaxValue: 100
  EBSThroughputCreditBalanceThreshold:
    Description: 'The minimum percentage of throughput credits remaining in the burst bucket (smaller instance only; set to -1 to disable).'
    Type: Number
    Default: 20
    MinValue: -1
    MaxValue: 100
Conditions:
  HasCPUUtilizationThreshold: !Not [!Equals [!Ref CPUUtilizationThreshold, '-1']]
  HasCPUCreditBalanceThreshold: !Not [!Equals [!Ref CPUCreditBalanceThreshold, '-1']]
  HasEBSIOCreditBalanceThreshold: !Not [!Equals [!Ref EBSIOCreditBalanceThreshold, '-1']]
  HasEBSThroughputCreditBalanceThreshold: !Not [!Equals [!Ref EBSThroughputCreditBalanceThreshold, '-1']]
Resources:
  ##########################################################################
  #                                                                        #
  #                                 TOPIC                                  #
  #                                                                        #
  ##########################################################################
  Topic:
    Type: 'AWS::SNS::Topic'
    Properties: {}
  TopicPolicy:
    Type: 'AWS::SNS::TopicPolicy'
    Properties:
      PolicyDocument:
        Id: Id1
        Version: '2012-10-17'
        Statement:
        - Sid: Sid1
          Effect: Allow
          Principal:
            Service: 'events.amazonaws.com' # Allow CloudWatch Events
          Action: 'sns:Publish'
          Resource: !Ref Topic
        - Sid: Sid2
          Effect: Allow
          Principal:
            AWS: '*' # Allow CloudWatch Alarms
          Action: 'sns:Publish'
          Resource: !Ref Topic
          Condition:
            StringEquals:
              'AWS:SourceOwner': !Ref 'AWS::AccountId'
      Topics:
      - !Ref Topic
  TopicEndpointSubscription:
    DependsOn: TopicPolicy
    Type: 'AWS::SNS::Subscription'
    Properties:
      DeliveryPolicy:
        healthyRetryPolicy:
          minDelayTarget: 1
          maxDelayTarget: 60
          numRetries: 100
          numNoDelayRetries: 0
          backoffFunction: exponential
        throttlePolicy:
          maxReceivesPerSecond: 1
      Endpoint: !Sub 'https://api.marbot.io/${Stage}/endpoint/${EndpointId}'
      Protocol: https
      TopicArn: !Ref Topic
  MonitoringJumpStartEvent:
    DependsOn: TopicEndpointSubscription
    Type: 'AWS::Events::Rule'
    Properties:
      Description: 'Monitoring Jump Start connection. (created by marbot)'
      ScheduleExpression: 'rate(30 days)'
      State: ENABLED
      Targets:
      - Arn: !Ref Topic
        Id: marbot
        Input: !Sub |
          {
            "Type": "monitoring-jump-start-connection",
            "StackTemplate": "marbot-auto-scaling-group",
            "StackVersion": "1.1.0",
            "Partition": "${AWS::Partition}",
            "AccountId": "${AWS::AccountId}",
            "Region": "${AWS::Region}",
            "StackId": "${AWS::StackId}",
            "StackName": "${AWS::StackName}"
          }
  ##########################################################################
  #                                                                        #
  #                                 ALARMS                                 #
  #                                                                        #
  ##########################################################################
  CPUUtilizationTooHighAlarm:
    Condition: HasCPUUtilizationThreshold
    DependsOn: TopicEndpointSubscription
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmActions:
      - !Ref Topic
      AlarmDescription: 'Average CPU utilization over last 10 minutes too high. (created by marbot)'
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
      - Name: AutoScalingGroupName
        Value: !Ref AutoScalingGroupName
      EvaluationPeriods: 1
      MetricName: CPUUtilization
      Namespace: 'AWS/EC2'
      OKActions:
      - !Ref Topic
      Period: 600
      Statistic: Average
      Threshold: !Ref CPUUtilizationThreshold
      TreatMissingData: notBreaching
  CPUCreditBalanceTooLowAlarm:
    Condition: HasCPUCreditBalanceThreshold
    DependsOn: TopicEndpointSubscription
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmActions:
      - !Ref Topic
      AlarmDescription: 'Average CPU credit balance over last 10 minutes too low, expect a significant performance drop soon. (created by marbot)'
      ComparisonOperator: LessThanThreshold
      Dimensions:
      - Name: AutoScalingGroupName
        Value: !Ref AutoScalingGroupName
      EvaluationPeriods: 1
      MetricName: CPUCreditBalance
      Namespace: 'AWS/EC2'
      OKActions:
      - !Ref Topic
      Period: 600
      Statistic: Average
      Threshold: !Ref CPUCreditBalanceThreshold
      TreatMissingData: notBreaching
  EBSIOCreditBalanceTooLowAlarm:
    Condition: HasEBSIOCreditBalanceThreshold
    DependsOn: TopicEndpointSubscription
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmActions:
      - !Ref Topic
      AlarmDescription: 'Average EBS IO credit balance over last 10 minutes too low, expect a significant performance drop soon. (created by marbot)'
      ComparisonOperator: LessThanThreshold
      Dimensions:
      - Name: AutoScalingGroupName
        Value: !Ref AutoScalingGroupName
      EvaluationPeriods: 1
      MetricName: 'EBSIOBalance%'
      Namespace: 'AWS/EC2'
      OKActions:
      - !Ref Topic
      Period: 600
      Statistic: Average
      Threshold: !Ref EBSIOCreditBalanceThreshold
      TreatMissingData: notBreaching
  EBSThroughputCreditBalanceTooLowAlarm:
    Condition: HasEBSThroughputCreditBalanceThreshold
    DependsOn: TopicEndpointSubscription
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmActions:
      - !Ref Topic
      AlarmDescription: 'Average EBS throughput credit balance over last 10 minutes too low, expect a significant performance drop soon. (created by marbot)'
      ComparisonOperator: LessThanThreshold
      Dimensions:
      - Name: AutoScalingGroupName
        Value: !Ref AutoScalingGroupName
      EvaluationPeriods: 1
      MetricName: 'EBSByteBalance%'
      Namespace: 'AWS/EC2'
      OKActions:
      - !Ref Topic
      Period: 600
      Statistic: Average
      Threshold: !Ref EBSThroughputCreditBalanceThreshold
      TreatMissingData: notBreaching
  # TODO add network in+out
  ##########################################################################
  #                                                                        #
  #                                 EVENTS                                 #
  #                                                                        #
  ##########################################################################
  UnsuccessfulEvent:
    DependsOn: TopicEndpointSubscription
    Type: 'AWS::Events::Rule'
    Properties:
      Description: 'EC2 Auto Scaling failed to launch or terminate an instance. (created by marbot)'
      EventPattern:
        source:
        - 'aws.autoscaling'
        'detail-type':
        - 'EC2 Instance Launch Unsuccessful'
        - 'EC2 Instance Terminate Unsuccessful'
        detail:
          AutoScalingGroupName:
          - !Ref AutoScalingGroupName
      State: ENABLED
      Targets:
      - Arn: !Ref Topic
        Id: marbot
Outputs:
  StackName:
    Description: 'Stack name.'
    Value: !Sub '${AWS::StackName}'
  StackTemplate:
    Description: 'Stack template.'
    Value: 'marbot-auto-scaling-group'
  StackVersion:
    Description: 'Stack version.'
    Value: '1.2.0'
