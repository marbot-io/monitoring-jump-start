---
# Copyright 2018-2020 widdix GmbH
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
AWSTemplateFormatVersion: '2010-09-09'
Description: 'marbot.io: Elastic Beanstalk monitoring (don''t forget to put the https://github.com/marbot-io/monitoring-jump-start/blob/master/marbot-elastic-beanstalk.config file into your .ebextensions folder; https://github.com/marbot-io/monitoring-jump-start)'
Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
    - Label:
        default: 'marbot endpoint'
      Parameters:
      - EndpointId
      - Stage
    - Label:
        default: 'Elastic Beanstalk status changes'
      Parameters:
      - ElasticBeanstalkResourceStatusChange
      - OtherResourceStatusChange
      - HealthStatusChange
      - ManagedUpdateStatusChange
    - Label:
        default: 'Elastic Beanstalk severities'
      Parameters:
      - InfoSeverity
      - WarnSeverity
      - ErrorSeverity
    - Label:
        default: 'Elastic Beanstalk applications and environments'
      Parameters:
      - ApplicationNames
      - EnvironmentNames
Parameters:
  EndpointId:
    Description: 'Your marbot endpoint ID (to get this value: select a channel where marbot belongs to and send a message like this: "@marbot show me my endpoint id").'
    Type: String
  Stage:
    Description: 'marbot stage (never change this!).'
    Type: String
    Default: v1
    AllowedValues: [v1, dev]
  ElasticBeanstalkResourceStatusChange:
    Description: 'Do you want to get notified about Elastic Beanstalk resource status changes (e.g., environment?'
    Type: String
    Default: true
    AllowedValues: [true, false]
  OtherResourceStatusChange:
    Description: 'Do you want to get notified about other resource status changes (e.g., Auto Scaling Group, Instance, ...)?'
    Type: String
    Default: true
    AllowedValues: [true, false]
  HealthStatusChange:
    Description: 'Do you want to get notified about health status changes?'
    Type: String
    Default: true
    AllowedValues: [true, false]
  ManagedUpdateStatusChange:
    Description: 'Do you want to get notified about managed update health status changes?'
    Type: String
    Default: true
    AllowedValues: [true, false]
  InfoSeverity:
    Description: 'Do you want to receive status changes with severity INFO'
    Type: String
    Default: true
    AllowedValues: [true, false]
  WarnSeverity:
    Description: 'Do you want to receive status changes with severity WARN'
    Type: String
    Default: true
    AllowedValues: [true, false]
  ErrorSeverity:
    Description: 'Do you want to receive status changes with severity ERROR'
    Type: String
    Default: true
    AllowedValues: [true, false]
  ApplicationNames:
    Description: 'Which applications do you want to monitor? Use * to monitor all environments in the region.'
    Type: CommaDelimitedList
    Default: '*'
  EnvironmentNames:
    Description: 'Which environments do you want to monitor? Use * to monitor all environments in the region.'
    Type: CommaDelimitedList
    Default: '*'
Conditions:
  ElasticBeanstalkResourceStatusChangeEnabled: !Equals [!Ref ElasticBeanstalkResourceStatusChange, 'true']
  OtherResourceStatusChangeEnabled: !Equals [!Ref OtherResourceStatusChange, 'true']
  HealthStatusChangeEnabled: !Equals [!Ref HealthStatusChange, 'true']
  ManagedUpdateStatusChangeEnabled: !Equals [!Ref ManagedUpdateStatusChange, 'true']
  InfoSeverityEnabled: !Equals [!Ref InfoSeverity, 'true']
  WarnSeverityEnabled: !Equals [!Ref WarnSeverity, 'true']
  ErrorSeverityEnabled: !Equals [!Ref ErrorSeverity, 'true']
  ApplicationNamesAll: !Equals [!Join ['', !Ref ApplicationNames], '*']
  EnvironmentNamesAll: !Equals [!Join ['', !Ref EnvironmentNames], '*']
Resources:
  Connection:
    Type: 'AWS::Events::Connection'
    Properties:
      AuthorizationType: 'API_KEY'
      AuthParameters:
        ApiKeyAuthParameters:
          ApiKeyName: 'X-API-Key'
          ApiKeyValue: !Ref Stage
      Description: 'marbot'
  Destination:
    Type: 'AWS::Events::ApiDestination'
    Properties:
      ConnectionArn: !GetAtt 'Connection.Arn'
      Description: 'Forwards notifiations and alarms to marbot'
      HttpMethod: 'POST'
      InvocationEndpoint: !Sub 'https://api.marbot.io/${Stage}/endpoint/${EndpointId}'
      InvocationRateLimitPerSecond: 1 # API rate limit = 0.2 req/sec baseline and 10 req/sec burst
  EventRuleRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: 'Allow'
          Principal:
            Service:
            - 'events.amazonaws.com'
          Action:
          - sts:AssumeRole
      Path: '/service-role/'
      Policies:
      - PolicyName: eventbridge
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: 'Allow'
            Action:
            - 'events:InvokeApiDestination'
            Resource: !GetAtt 'Destination.Arn'
  MonitoringElasticBeanstalk:
    Type: 'AWS::Events::Rule'
    Properties:
      Description: 'Monitoring Elastic Beanstalk. (created by marbot)'
      State: ENABLED
      EventPattern:
        source:
        - aws.elasticbeanstalk
        detail-type:
        - !If [ElasticBeanstalkResourceStatusChangeEnabled, 'Elastic Beanstalk resource status change', !Ref 'AWS::NoValue']
        - !If [OtherResourceStatusChangeEnabled, 'Other resource status change', !Ref 'AWS::NoValue']
        - !If [HealthStatusChangeEnabled, 'Health status change', !Ref 'AWS::NoValue']
        - !If [ManagedUpdateStatusChangeEnabled, 'Managed update status change', !Ref 'AWS::NoValue']
        detail:
          Severity:
          - !If [InfoSeverityEnabled, 'INFO', !Ref 'AWS::NoValue']
          - !If [WarnSeverityEnabled, 'WARN', !Ref 'AWS::NoValue']
          - !If [ErrorSeverityEnabled, 'ERROR', !Ref 'AWS::NoValue']
          ApplicationName: !If [ApplicationNamesAll, !Ref 'AWS::NoValue', !Ref ApplicationNames]
          EnvironmentName: !If [EnvironmentNamesAll, !Ref 'AWS::NoValue', !Ref EnvironmentNames]
      Targets:
      - Arn: !GetAtt Destination.Arn
        Id: marbot
        RoleArn: !GetAtt 'EventRuleRole.Arn'
  MonitoringJumpStartEvent:
    Type: 'AWS::Events::Rule'
    Properties:
      Description: 'Monitoring Jump Start connection. (created by marbot)'
      ScheduleExpression: 'rate(30 days)'
      State: ENABLED
      Targets:
      - Arn: !GetAtt Destination.Arn
        Id: marbot
        RoleArn: !GetAtt 'EventRuleRole.Arn'
        Input: !Sub |
          {
            "Type": "monitoring-jump-start-connection",
            "StackTemplate": "marbot-elastic-beanstalk",
            "StackVersion": "1.5.0",
            "Partition": "${AWS::Partition}",
            "AccountId": "${AWS::AccountId}",
            "Region": "${AWS::Region}",
            "StackId": "${AWS::StackId}",
            "StackName": "${AWS::StackName}"
          }

Outputs:
  StackName:
    Description: 'Stack name.'
    Value: !Sub '${AWS::StackName}'
  StackTemplate:
    Description: 'Stack template.'
    Value: 'marbot-elastic-beanstalk'
  StackVersion:
    Description: 'Stack version.'
    Value: '1.5.0'
